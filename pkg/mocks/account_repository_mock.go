// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/account_repository.go

// Package mock_internal is a generated GoMock package.
package mock

import (
        context "context"
        sql "database/sql"
        reflect "reflect"

        gomock "github.com/golang/mock/gomock"
        internal "github.com/hokdre/mini-ewallet/internal"
        model "github.com/hokdre/mini-ewallet/internal/model"
)

// MockAccountRepository is a mock of AccountRepository interface.
type MockAccountRepository struct {
        ctrl     *gomock.Controller
        recorder *MockAccountRepositoryMockRecorder
}

// MockAccountRepositoryMockRecorder is the mock recorder for MockAccountRepository.
type MockAccountRepositoryMockRecorder struct {
        mock *MockAccountRepository
}

// NewMockAccountRepository creates a new mock instance.
func NewMockAccountRepository(ctrl *gomock.Controller) *MockAccountRepository {
        mock := &MockAccountRepository{ctrl: ctrl}
        mock.recorder = &MockAccountRepositoryMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountRepository) EXPECT() *MockAccountRepositoryMockRecorder {
        return m.recorder
}

// CreateTx mocks base method.
func (m *MockAccountRepository) CreateTx(ctx context.Context, tx *sql.Tx, newAcc model.Account) error {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "CreateTx", ctx, tx, newAcc)
        ret0, _ := ret[0].(error)
        return ret0
}

// CreateTx indicates an expected call of CreateTx.
func (mr *MockAccountRepositoryMockRecorder) CreateTx(ctx, tx, newAcc interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTx", reflect.TypeOf((*MockAccountRepository)(nil).CreateTx), ctx, tx, newAcc)
}

// Get mocks base method.
func (m *MockAccountRepository) Get(ctx context.Context, filter internal.AccountFilter) (model.Account, error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "Get", ctx, filter)
        ret0, _ := ret[0].(model.Account)
        ret1, _ := ret[1].(error)
        return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAccountRepositoryMockRecorder) Get(ctx, filter interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAccountRepository)(nil).Get), ctx, filter)
}
